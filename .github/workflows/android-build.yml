name: Build & Auto-Release WkWhisperKey Android APK

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Kotlin Multiplatform + Android Build
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 저장소 체크아웃
      - name: 🧩 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # 2️⃣ JDK 환경
      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3️⃣ Gradle 래퍼 초기화
      - name: 🧱 Initialize Gradle Wrapper
        run: bash scripts/init-gradle.sh

      # 4️⃣ 🧩 브랜치별 NDK/CMake 캐시 복원
      - name: ♻️ Restore Build Cache (NDK/CMake)
        id: buildcache
        uses: actions/cache/restore@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
            ~/.gradle/caches
            android/app/build/intermediates
            android/app/.cxx
          key: wkbuild-${{ github.ref_name }}
          restore-keys: |
            wkbuild-

      # 5️⃣ NDK 확인 및 설치
      - name: 📱 Ensure NDK
        run: |
          if [ ! -d /usr/local/lib/android/sdk/ndk/26.1.10909125 ]; then
            echo "Installing NDK via sdkmanager..."
            yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "ndk;26.1.10909125"
          else
            echo "✅ NDK already installed."
          fi

      # 6️⃣ 유령파일 제거
      - name: 🧹 Clean Ghost Files Only
        run: |
          echo "🧽 Removing untracked and deleted-branch ghost files..."
          git clean -fdX
          echo "✅ Removed untracked files, caches kept."

      # 7️⃣ 🚀 빌드 실행
      - name: 🚀 Build Android Debug APK
        run: |
          set -e
          ./gradlew --no-daemon :android:app:assembleDebug | tee build.log
          EXIT_CODE=${PIPESTATUS[0]}
          echo "BUILD_EXIT=$EXIT_CODE" >> $GITHUB_ENV
          exit $EXIT_CODE

      # 8️⃣ 💾 캐시 저장 (성공/실패 무관)
      - name: 💾 Save Branch Build Cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
            ~/.gradle/caches
            android/app/build/intermediates
            android/app/.cxx
          key: wkbuild-${{ github.ref_name }}

      # 9️⃣ 📦 APK 업로드
      - name: 📦 Upload APK Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: wkwhisperkey-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk

      # 🔟 🔢 태그 계산
      - name: 🔢 Compute Next Tag
        id: tag
        run: |
          last=$(git describe --tags --abbrev=0 2>/dev/null || echo "wk-v0.1.0")
          base=${last%.*}
          num=${last##*.}
          next=$((num + 1))
          echo "next_tag=${base}.${next}" >> $GITHUB_OUTPUT

      # 11️⃣ 📜 로그 tail
      - name: 📜 Extract Tail of Build Log
        id: taillog
        if: always()
        run: |
          echo "tail<<EOF" >> $GITHUB_OUTPUT
          tail -n 20 build.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 12️⃣ 🚀 릴리즈 (main 전용)
      - name: 🚀 Create GitHub Release
        if: github.ref == 'refs/heads/main' && success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.next_tag }}
          name: "WkWhisperKey ${{ steps.tag.outputs.next_tag }}"
          body: |
            🧩 **WkWhisperKey Android Build**
            - **Branch:** ${{ github.ref_name }}
            - **Commit:** ${{ github.sha }}
            - **NDK:** 26.1.10909125
            - **Gradle:** 8.7
            - **Build Time:** ${{ github.run_started_at }}
            - **Exit:** ${{ env.BUILD_EXIT }}

            ### 🧱 Build Tail
            ```
            ${{ steps.taillog.outputs.tail }}
            ```

            _Auto-generated by GitHub Actions_
          files: android/app/build/outputs/apk/debug/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 🧹 머지 후 캐시 삭제 (PR 닫힐 때만)
  cleanup:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: 🗑 Delete Branch Cache After Merge
        run: |
          echo "🧹 Deleting cache for branch: ${{ github.event.pull_request.head.ref }}"
          gh cache list --limit 50 --json id,key | \
            jq -r '.[] | select(.key=="wkbuild-${{ github.event.pull_request.head.ref }}") | .id' | \
            xargs -r -n1 gh cache delete
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
