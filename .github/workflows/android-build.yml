name: Build & Auto-Release WkWhisperKey Android APK

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Kotlin Multiplatform + Android Build
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: üß© Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # 2Ô∏è‚É£ JDK
      - name: ‚òï Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3Ô∏è‚É£ Key generation
      - name: üßÆ Generate cache keys
        id: keys
        run: |
          OS_NAME=$(uname -s)
          OS_VER=$(uname -r | cut -d'-' -f1)
          BRANCH=$(echo "${GITHUB_REF_NAME}" | tr '/' '-')

          echo "wkcore_key=wkcore-${OS_NAME}-${OS_VER}" >> $GITHUB_OUTPUT
          echo "wkbuild_key=wkbuild-${BRANCH}" >> $GITHUB_OUTPUT
          echo "os_id=${OS_NAME}-${OS_VER}" >> $GITHUB_OUTPUT

      # 4Ô∏è‚É£ Restore all caches
      - name: ‚ôªÔ∏è Restore caches
        id: restore
        uses: actions/cache/restore@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
            ~/.gradle/caches
            android/app/build/intermediates
            android/app/.cxx
          key: ${{ steps.keys.outputs.wkcore_key }}
          restore-keys: |
            wkcore-
            wkbuild-${{ github.ref_name }}-
            wkbuild-

      # 5Ô∏è‚É£ Compute pre-build core hash
      - name: üî¢ Compute pre-build core hash
        id: prehash
        run: |
          find /usr/local/lib/android/sdk/ndk /usr/local/lib/android/sdk/cmake -type f -exec sha1sum {} \; | sha1sum | awk '{print $1}' > core_pre.hash
          echo "pre_hash=$(cat core_pre.hash)" >> $GITHUB_OUTPUT

      # 6Ô∏è‚É£ Ensure NDK
      - name: üì± Ensure NDK
        run: |
          if [ ! -d /usr/local/lib/android/sdk/ndk/26.1.10909125 ]; then
            echo "Installing NDK..."
            yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "ndk;26.1.10909125"
            ./gradlew clean
          fi

      # 7Ô∏è‚É£ Clean ghost files
      - name: üßπ Clean Ghost Files
        run: git clean -fdX

      # 8Ô∏è‚É£ Build
      - name: üöÄ Build Android Debug APK
        run: |
          set -e
          ./gradlew --no-daemon :android:app:assembleDebug | tee build.log
          EXIT_CODE=${PIPESTATUS[0]}
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT
          exit $EXIT_CODE || true

      # 9Ô∏è‚É£ Compute post-build core hash
      - name: üßÆ Compute post-build core hash
        id: posthash
        run: |
          find /usr/local/lib/android/sdk/ndk /usr/local/lib/android/sdk/cmake -type f -exec sha1sum {} \; | sha1sum | awk '{print $1}' > core_post.hash
          echo "post_hash=$(cat core_post.hash)" >> $GITHUB_OUTPUT

      # üîü Compare & purge old core cache if changed
      - name: üß® Purge old core cache if changed
        if: always()
        run: |
          if [ "${{ steps.prehash.outputs.pre_hash }}" != "${{ steps.posthash.outputs.post_hash }}" ]; then
            echo "Core toolset changed, purging old caches..."
            gh api --method DELETE /repos/${{ github.repository }}/actions/caches?key=wkcore-${{ steps.keys.outputs.os_id }} || true
            gh api --method DELETE /repos/${{ github.repository }}/actions/caches?key=wkcore- || true
          else
            echo "Core toolset unchanged, skip purge."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 11Ô∏è‚É£ Save core cache (always)
      - name: üíæ Save core cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
          key: ${{ steps.keys.outputs.wkcore_key }}

      # 12Ô∏è‚É£ Purge old build cache
      - name: üß® Purge old build cache
        if: always()
        run: |
          gh api --method DELETE /repos/${{ github.repository }}/actions/caches?key=${{ steps.keys.outputs.wkbuild_key }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 13Ô∏è‚É£ Save build cache
      - name: üíæ Save build cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.gradle/caches
            android/app/build/intermediates
            android/app/.cxx
          key: ${{ steps.keys.outputs.wkbuild_key }}

      # 14Ô∏è‚É£ Upload artifact
      - name: üì¶ Upload APK Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: wkwhisperkey-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
