name: Build WkWhisperKey Android APK

on:
  push:
    branches: [ main, develop ]         # main / develop 자동 빌드
  pull_request:                         # PR 열린 브랜치 자동 빌드
    types: [opened, synchronize, reopened]
  workflow_dispatch:                    # 기타 브랜치 수동 실행 허용

jobs:
  build:
    name: Android NDK + Kotlin Build
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📱 Install Android SDK + NDK
        uses: android-actions/setup-android@v3
        with:
          ndk: 26.1.10909125

      # ⚡ 캐시 복원 단계 (빌드 속도 향상)
      - name: ♻️ Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 🔧 Gradle wrapper 자동 생성 (없을 때만)
      - name: 🧱 Ensure Gradle Wrapper
        run: |
          cd android
          if [ ! -f gradlew ]; then
            echo "Gradle wrapper not found — creating..."
            gradle wrapper
          fi
          chmod +x gradlew

      - name: 🚀 Build Debug APK
        run: |
          cd android
          ./gradlew --no-daemon assembleDebug

      # ⚙️ 캐시 저장 (성공 후 최신 캐시 갱신)
      - name: ♻️ Save Gradle cache
        if: success()
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: 📦 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wkwhisperkey-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
