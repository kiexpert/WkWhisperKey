name: Build & Auto-Release WkWhisperKey Android APK

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Kotlin Multiplatform + Android Build
    runs-on: ubuntu-latest

    steps:
      # ────────────── 1️⃣ Checkout ──────────────
      - name: 🧩 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # ────────────── 2️⃣ JDK ──────────────
      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # ────────────── 3️⃣ Gradle init ──────────────
      - name: 🧱 Initialize Gradle Wrapper
        run: bash scripts/init-gradle.sh

      # ────────────── 4️⃣ Detect latest core cache ──────────────
      - name: 🔍 Detect Latest Core Cache
        id: core_meta
        run: bash scripts/cache-manager.sh core restore
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ────────────── 5️⃣ Restore core cache ──────────────
      - name: ♻️ Restore Core Cache
        if: steps.core_meta.outputs.restore_key != ''
        uses: actions/cache/restore@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
          key: ${{ steps.core_meta.outputs.restore_key }}
          restore-keys: wkcore-

      # ────────────── 6️⃣ Detect latest build cache ──────────────
      - name: 🔍 Detect Latest Build Cache
        id: build_meta
        run: bash scripts/cache-manager.sh build restore
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ────────────── 7️⃣ Restore build cache ──────────────
      - name: ♻️ Restore Build Cache
        if: steps.build_meta.outputs.restore_key != ''
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.gradle/caches
            android/app/build/intermediates
            android/app/.cxx
          key: ${{ steps.build_meta.outputs.restore_key }}
          restore-keys: wkbuild-
      
      # ────────────── 8️⃣ Build APK ──────────────
      - name: 🚀 Build Android Debug APK
        run: |
          set -e
          ./gradlew --no-daemon :android:app:assembleDebug | tee build.log
          EXIT_CODE=${PIPESTATUS[0]}
          if [ $EXIT_CODE -ne 0 ]; then
            echo "Gradle build failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          fi

      # ────────────── 9️⃣ Upload artifact ──────────────
      - name: 📦 Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: wkwhisperkey-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk

      # ────────────── 🔟 Auto-version bump ──────────────
      - name: 🔢 Compute Next Tag
        id: tag
        run: |
          last=$(git describe --tags --abbrev=0 2>/dev/null || echo "wk-v0.1.0")
          base=${last%.*}
          num=${last##*.}
          next=$((num + 1))
          echo "next_tag=${base}.${next}" >> $GITHUB_OUTPUT
          echo "Next tag: ${base}.${next}"

      # ────────────── 11️⃣ Extract tail log ──────────────
      - name: 📜 Extract Tail of Build Log
        id: taillog
        if: always()
        run: |
          echo "tail<<EOF" >> $GITHUB_OUTPUT
          tail -n 25 build.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # ────────────── 12️⃣ Save Caches (post-build) ──────────────
      - name: 💾 Save Core Cache
        if: always()
        run: bash scripts/cache-manager.sh core save
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 💾 Save Build Cache
        if: always()
        run: bash scripts/cache-manager.sh build save
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ────────────── 13️⃣ Auto Release (main only) ──────────────
      - name: 🚀 Create GitHub Release
        if: github.ref == 'refs/heads/main' && success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.next_tag }}
          name: "WkWhisperKey ${{ steps.tag.outputs.next_tag }}"
          body: |
            🧩 **WkWhisperKey Android Build**
            - **Branch:** ${{ github.ref_name }}
            - **Commit:** ${{ github.sha }}
            - **Gradle:** 8.7
            - **NDK:** 26.1.10909125
            - **Build Time:** ${{ github.run_started_at }}

            ### 🧱 Recent Build Log
            ```
            ${{ steps.taillog.outputs.tail }}
            ```

            _Auto-generated by GitHub Actions_
          files: android/app/build/outputs/apk/debug/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
