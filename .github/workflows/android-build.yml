name: Build & Auto-Release WkWhisperKey Android APK

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Kotlin Multiplatform + Android Build
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 🧱 Initialize Gradle Wrapper
        run: bash scripts/init-gradle.sh

      # ----------------------------
      # 🔑 캐시 키 계산 (코어+빌드)
      # ----------------------------
      - name: 🧮 Generate Cache Keys
        id: keys
        run: |
          BRANCH=$(echo "${GITHUB_REF_NAME}" | tr '/' '-')
          CORE_HASH=$(find /usr/local/lib/android/sdk -type f -exec sha256sum {} \; | sort | sha256sum | cut -c1-32)
          echo "CORE_HASH_BEFORE=$CORE_HASH" >> $GITHUB_ENV
          echo "wkcore_key=wkcore-Linux" >> $GITHUB_OUTPUT
          echo "wkbuild_key=wkbuild-${BRANCH}" >> $GITHUB_OUTPUT

      # ----------------------------
      # ♻️ Restore caches
      # ----------------------------
      - name: ♻️ Restore Core Tools
        id: corecache
        uses: actions/cache/restore@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
          key: wkcore-Linux
          restore-keys: wkcore-Linux

      - name: ♻️ Restore Build Cache
        id: buildcache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.gradle/caches
            android/app/build/intermediates
            android/app/.cxx
          key: ${{ steps.keys.outputs.wkbuild_key }}
          restore-keys: wkbuild-

      # ----------------------------
      # 🧹 Clean untracked ghosts
      # ----------------------------
      - name: 🧹 Clean Ghost Files
        run: git clean -fdX

      # ----------------------------
      # 🚀 Build
      # ----------------------------
      - name: 🚀 Build Android Debug APK
        run: |
          set -e
          ./gradlew --no-daemon :android:app:assembleDebug | tee build.log
          EXIT_CODE=${PIPESTATUS[0]}
          if [ $EXIT_CODE -ne 0 ]; then
            echo "Gradle build failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          fi

      # ----------------------------
      # 💾 Save Build Cache (always, branch scoped)
      # ----------------------------
      - name: 💾 Save Build Cache
        if: always()
        run: |
          echo "🧨 Removing old build caches for branch..."
          gh cache list --limit 100 | grep "wkbuild-${GITHUB_REF_NAME}" | awk '{print $1}' | xargs -r -n1 gh cache delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            ~/.gradle/caches
            android/app/build/intermediates
            android/app/.cxx
          key: ${{ steps.keys.outputs.wkbuild_key }}

      # ----------------------------
      # 💾 Save Core Cache (if changed)
      # ----------------------------
      - name: 🔍 Detect Core Hash Change
        id: corehash
        run: |
          CORE_HASH_AFTER=$(find /usr/local/lib/android/sdk -type f -exec sha256sum {} \; | sort | sha256sum | cut -c1-32)
          echo "CORE_HASH_AFTER=$CORE_HASH_AFTER" >> $GITHUB_ENV
          if [ "$CORE_HASH_AFTER" != "$CORE_HASH_BEFORE" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: 💣 Delete Old Core Cache
        if: steps.corehash.outputs.changed == 'true'
        run: |
          echo "🧨 Core tools changed → removing old wkcore-Linux caches..."
          gh cache list --limit 100 | grep "wkcore-Linux" | awk '{print $1}' | xargs -r -n1 gh cache delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 💾 Save Updated Core Cache
        if: steps.corehash.outputs.changed == 'true' || steps.corecache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
          key: wkcore-Linux

      # ----------------------------
      # 📦 Upload artifact
      # ----------------------------
      - name: 📦 Upload APK Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: wkwhisperkey-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
